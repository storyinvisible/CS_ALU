module boolean (
    input alufn[4], // select operation from alufn[3:0]
    input a[16],
    input b[16],
    output out[16]
    
  ) {
  // This module is capable of performing logic operaitons: AND, NAND, OR ,NOR, XOR, XNOR, "A", and not "A".
  
  var i;
  always {
    out=16b0;
    for (i=0; i<16; i++){
      case(alufn[3:0]){
        4b1000: // AND
          out[i] = a[i] & b[i];
        4b0111: // NAND
          out[i] = ~(a[i] & b[i]); 
        4b1110: // OR
          out[i] = a[i] | b[i];
        4b0001: // NOR 
          out[i] = ~(a[i] | b[i]); 
        4b0110: // XOR
          out[i] = a[i] ^ b[i];
        4b1001: // XNOR
          out[i] = ~(a[i] ^ b[i]);  
        4b1010: // "A"
          out[i] = a[i];
        4b0101: // not "A"  
          out[i] = ~a[i];
        
        }
      }
    
  }
}
