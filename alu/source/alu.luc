module alu (
    input a[16], // first operator
    input b[16], // second operator 
    input alufn[6], // ALUFN[5:0]
    output out[16] // output
  ) {
    // feed the input of operators for each modules and instanstiate them
    .a(a), .b(b){
      adder adder;
      boolean boolean;
      compare compare;
      shifter shifter;
    }
    

  always {
    out = 0;
    // feed ALUFN for each module as they need
    adder.alufn = alufn[1:0];
    boolean.alufn = alufn[3:0];
    compare.alufn = alufn[2:1];
    shifter.alufn = alufn[1:0];
    
    // select output depending on ALUFN[5:4]
    case (alufn[5:4]) {
      b00: out = adder.sum;    
      b01: out = boolean.out;
      b10: out = shifter.ashifted;
      b11: out = compare.cmp;
    }
  }
}
